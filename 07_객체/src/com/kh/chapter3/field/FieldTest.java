package com.kh.chapter3.field;

/* 변수구분
 *  	1. 전역변수 (필드, 멤버변수, 인스턴스변수)
 *  		- 클래스 영역에 바로 선언하는 변수. 클래스 내에서 어디서든 사용이 가능
 *  		- 인스턴스변수  (필드, 멤버변수)
 *  			생성시점 : new 연산자를 통해 객체를 생성할 때 메모리에 할당
 *  			소멸시점 : 객체가 소멸 시 같이 소멸 (가비지 컬렉터가 수거할 때, 프로그램이 끝날 때)
 *  		- 클래스변수 (static 변수) : 
 *  			static이라는 예약어가 붙은 변수/ 객체 생성하지 않고 클래스명으로 바로 사용
 *  			생성시점 : 프로그램 실행될 떄 JVM에 의해 해당 클래스가 로드될 때 static 메모리 영역에 할당
 *  			소멸시점 : 프로그램이 종료될 때 소멸 
 *  			클래스 변수는 프로그램 실행과 동시에 메모리에 올려 놓고 공유하며 사용할 목적으로 선언. 
 *  				*** STaticFieldTest 클래스에 의해 생성된 모든 객체가 이 클래스 변수값을 공유한다. 
 *  
 *  	2. 지역변수
 * 			- 클래스 영역 안의 어떤 특정한 구역 ({})에 선언하는 변수. 해당 구역 안에서만 사용 가능
 * 			- 메소드, 제어문(if, for) 등
 * 			- 생성시점 : 특정한 구역({}) 실행(호출) 시 메모리 영역에 할당
 * 			- 소멸시점 : 특정한 구역이 종료 시 소멸 (ex. 메소드 종료 시)  
 */

// 변수 선언 위치에 따른 구분을 보기 위한 테스트 클래스(전역, 지역, 매개)
public class FieldTest { // 클래스 영역의 시작부분

	// 인스턴스변수
	private int global; 
	
	// 매개변수가 있는 메소드,
	//  매개변수도 일종의 지역변수, 메소드 영역에서 사용 가능 
	public void test(int num) { // test 메소드 영역 시작
		
		// test 메소드 영역에서 선언한 변수, 접근제한자 필요 없다.붙이지 않는다. 
		// 지역변수 (특정 구역, 즉 메소드 영역 내에 작성한 변수)
		// 			(어디서든 한 번은) 초기화 하지 않으면 에러 난다.
		int local = 5; 
		
		//인스턴스변수 출력 -> JVM이 초기화했음, 클래스 전역에서 사용가능
		System.out.println("인스턴스 변수 출력 : " + global);
		
		// 지역변수 출력 
		System.out.println("지역변수 출력 : " + local);
		
		// 매개변수 출력 -> 메소드 호출시 반드시 값을 입력 전달되기 때문에 출력 가능 
		System.out.println("매개변수 출력 : " + num);
		
	}// test 메소드 영역 끝

} //클래스 영역 끝 부분
