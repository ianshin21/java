<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;listStream&apos; from expression &apos;list.stream()&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;listStream&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.basic.A_Create.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.stream()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;listStream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.basic{A_Create.java" name="listStream" replace="true" selection="1060 0" stamp="1615968589958" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;stream&apos; from expression &apos;Arrays.stream(names)&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;stream&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.basic.A_Create.method2()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(names)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;stream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.basic{A_Create.java" name="stream" replace="true" selection="1443 0" stamp="1615970101356" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;stream&apos; from expression &apos;IntStream.range(1,10)&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;stream&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.basic.A_Create.method3()&apos;&#x0D;&#x0A;- Variable expression: &apos;IntStream.range(1,10)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;stream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.basic{A_Create.java" name="stream" replace="true" selection="1667 0" stamp="1615970564647" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;sum&apos; from expression &apos;stream.peek(i -&gt; System.out.println(i)).sum()&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;sum&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.basic.A_Create.method3()&apos;&#x0D;&#x0A;- Variable expression: &apos;stream.peek(i -&gt; System.out.println(i)).sum()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;sum&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.basic{A_Create.java" name="sum" replace="true" selection="1790 0" stamp="1615970753484" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;stream&apos; from expression &apos;Arrays.stream(array)&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;stream&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.intermediate_operations.B_Mapping.method3()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(array)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;stream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.intermediate_operations{B_Mapping.java" name="stream" replace="true" selection="1973 0" stamp="1615980317184" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;stream&apos; from expression &apos;Arrays.stream(new int[]{5,2,4,3,1})&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;stream&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.intermediate_operations.C_Sorted.method2()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(new int[]{5,2,4,3,1})&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;stream&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.intermediate_operations{C_Sorted.java" name="stream" replace="true" selection="1123 0" stamp="1615983926557" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;result&apos; from expression &apos;Arrays.stream(array).allMatch(i -&gt; i % 2 == 0)&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;result&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.A_Match.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(array).allMatch(i -&gt; i % 2 == 0)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;result&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{A_Match.java" name="result" replace="true" selection="508 0" stamp="1616053056039" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;count&apos; from expression &apos;Arrays.stream(array).filter(i -&gt; i % 2 == 0).count()&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;count&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.B_Aggregate.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(array).filter(i -&gt; i % 2 == 0).count()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;count&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{B_Aggregate.java" name="count" replace="true" selection="538 0" stamp="1616057054671" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;sum&apos; from expression &apos;Arrays.stream(array).filter(i -&gt; i % 2 == 0).sum()&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;sum&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.B_Aggregate.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(array).filter(i -&gt; i % 2 == 0).sum()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;sum&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{B_Aggregate.java" name="sum" replace="true" selection="668 0" stamp="1616057276328" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;average&apos; from expression &apos;Arrays.stream(array).filter(i -&gt; i % 2 == 0).average()&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;average&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.B_Aggregate.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(array).filter(i -&gt; i % 2 == 0).average()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;average&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{B_Aggregate.java" name="average" replace="true" selection="785 0" stamp="1616057396139" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;max&apos; from expression &apos;Arrays.stream(array).filter(i -&gt; i % 2 == 0).max()&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;max&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.B_Aggregate.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(array).filter(i -&gt; i % 2 == 0).max()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;max&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{B_Aggregate.java" name="max" replace="true" selection="962 0" stamp="1616057575214" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;min&apos; from expression &apos;Arrays.stream(array).filter(i -&gt; i % 2 == 0).min()&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;min&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.B_Aggregate.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(array).filter(i -&gt; i % 2 == 0).min()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;min&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{B_Aggregate.java" name="min" replace="true" selection="1128 0" stamp="1616057652835" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;findFirst&apos; from expression &apos;Arrays.stream(array).filter(i -&gt; i % 2 == 0).findFirst()&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;findFirst&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.B_Aggregate.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(array).filter(i -&gt; i % 2 == 0).findFirst()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;findFirst&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{B_Aggregate.java" name="findFirst" replace="true" selection="1267 0" stamp="1616057719049" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;avg&apos; from expression &apos;list.stream().mapToInt(i -&gt; i.intValue()).average().getAsDouble()&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;avg&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.B_Aggregate.method2()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.stream().mapToInt(i -&gt; i.intValue()).average().getAsDouble()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;avg&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{B_Aggregate.java" name="avg" replace="true" selection="1761 0" stamp="1616058612117" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;optional&apos; from expression &apos;list.stream().mapToInt(i -&gt; i.intValue()).average()&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;optional&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.B_Aggregate.method2()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.stream().mapToInt(i -&gt; i.intValue()).average()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;optional&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{B_Aggregate.java" name="optional" replace="true" selection="1875 0" stamp="1616058846157" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;avg&apos; from expression &apos;optional.orElse(0.0)&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;avg&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.B_Aggregate.method2()&apos;&#x0D;&#x0A;- Variable expression: &apos;optional.orElse(0.0)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;avg&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{B_Aggregate.java" name="avg" replace="true" selection="2189 0" stamp="1616062105806" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;result&apos; from expression &apos;Arrays.stream(array).reduce((i1,i2) -&gt; {return i1 * i2;})&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;result&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.B_Aggregate.method3()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(array).reduce((i1,i2) -&gt; {return i1 * i2;})&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;result&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{B_Aggregate.java" name="result" replace="true" selection="3235 0" stamp="1616063748871" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;result&apos; from expression &apos;Arrays.stream(array).reduce(0,(i1,i2) -&gt; i1 * i2)&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;result&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.B_Aggregate.method3()&apos;&#x0D;&#x0A;- Variable expression: &apos;Arrays.stream(array).reduce(0,(i1,i2) -&gt; i1 * i2)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;result&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{B_Aggregate.java" name="result" replace="true" selection="3499 0" stamp="1616064218332" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;maleList&apos; from expression &apos;list.stream().filter(member -&gt; member.getGender().equals(&quot;M&quot;)).collect(Collectors.toList())&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;maleList&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.C_Collect.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.stream().filter(member -&gt; member.getGender().equals(&quot;M&quot;)).collect(Collectors.toList())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;maleList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{C_Collect.java" name="maleList" replace="true" selection="738 0" stamp="1616066562646" varType="false" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;femaleList&apos; from expression &apos;list.stream().filter(member -&gt; member.getGender().equals(&quot;F&quot;)).collect(Collectors.toCollection(HashSet::new))&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;femaleList&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.C_Collect.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.stream().filter(member -&gt; member.getGender().equals(&quot;F&quot;)).collect(Collectors.toCollection(HashSet::new))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;femaleList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{C_Collect.java" name="femaleList" replace="true" selection="1293 0" stamp="1616067278122" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;map&apos; from expression &apos;list.stream().collect(Collectors.toMap(member -&gt; member.getName(),member -&gt; member.getGender()))&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;map&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.C_Collect.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.stream().collect(Collectors.toMap(member -&gt; member.getName(),member -&gt; member.getGender()))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;map&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{C_Collect.java" name="map" replace="true" selection="1604 0" stamp="1616067693345" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;memberMap&apos; from expression &apos;Function.identity()&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;memberMap&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.C_Collect.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;Function.identity()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;memberMap&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{C_Collect.java" name="memberMap" replace="true" selection="1883 0" stamp="1616067944449" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;memberMap&apos; from expression &apos;list.stream().collect(Collectors.toMap(member -&gt; member.getName(),Function.identity()))&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;memberMap&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.C_Collect.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.stream().collect(Collectors.toMap(member -&gt; member.getName(),Function.identity()))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;memberMap&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{C_Collect.java" name="memberMap" replace="true" selection="1889 0" stamp="1616068001834" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;list.stream().collect(Collectors.groupingBy(member -&gt; member.getGender()))&apos;&#x0D;&#x0A;- Original project: &apos;19_StreamAPI&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;com.kh.stream.terminal_operations.C_Collect.method1()&apos;&#x0D;&#x0A;- Variable expression: &apos;list.stream().collect(Collectors.groupingBy(member -&gt; member.getGender()))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.kh.stream.terminal_operations{C_Collect.java" name="collect" replace="true" selection="2378 0" stamp="1616069461349" varType="false" version="1.0"/>
</session>